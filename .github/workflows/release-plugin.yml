name: Flexible Multi-Project Release

on:
  push:
    tags:
      - '*-v*.*.*'  # 匹配如 latest-posts-v1.0.0 或 abc-xyz-v1.0.0 的标签

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: 检出代码
      uses: actions/checkout@v3

    - name: 提取项目信息
      id: project_info
      run: |
        TAG=${GITHUB_REF#refs/tags/}
        PROJECT=${TAG%-v*}
        VERSION=${TAG##*-v}
        echo "PROJECT=$PROJECT" >> $GITHUB_OUTPUT
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        
        # 根据项目名称决定目录路径
        if [ "$PROJECT" == "latest-posts" ]; then
          echo "PROJECT_DIR=amusementbreak/Latest-posts" >> $GITHUB_OUTPUT
        else
          echo "PROJECT_DIR=$PROJECT" >> $GITHUB_OUTPUT
        fi

    - name: 显示当前目录结构
      run: |
        echo "当前目录结构："
        ls -R

    - name: 压缩项目文件
      run: |
        if [ -d "${{ steps.project_info.outputs.PROJECT_DIR }}" ]; then
          cd ${{ steps.project_info.outputs.PROJECT_DIR }}
          zip -r ../../${{ steps.project_info.outputs.PROJECT }}.zip .
          cd ../..
        else
          echo "错误：未找到项目目录 ${{ steps.project_info.outputs.PROJECT_DIR }}"
          echo "当前目录结构："
          ls -R
          exit 1
        fi

    - name: 检查 zip 文件
      run: |
        if [ ! -f "${{ steps.project_info.outputs.PROJECT }}.zip" ]; then
          echo "错误：未找到 zip 文件"
          exit 1
        fi

    - name: 创建 Release
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      run: |
        RELEASE_TITLE="${{ steps.project_info.outputs.PROJECT }} v${{ steps.project_info.outputs.VERSION }}"
        gh release create "${{ steps.project_info.outputs.PROJECT }}-v${{ steps.project_info.outputs.VERSION }}" \
          --title "$RELEASE_TITLE" \
          --notes "Release for $RELEASE_TITLE" \
          "${{ steps.project_info.outputs.PROJECT }}.zip#$RELEASE_TITLE"

    - name: 清理
      if: always()
      run: rm -f ${{ steps.project_info.outputs.PROJECT }}.zip