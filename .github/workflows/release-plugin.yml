name: Release Plugin

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Zip Plugin
      run: |
        if [ -d "amusementbreak/Latest-posts" ]; then
          cd amusementbreak/Latest-posts
          zip -r ../../latest-posts-for-elementor.zip .
        else
          echo "Directory amusementbreak/Latest-posts not found. Zipping root directory."
          zip -r latest-posts-for-elementor.zip .
        fi
      
    - name: Create or Update Release
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      run: |
        release_id=$(curl -sS -H "Authorization: token ${{ secrets.PAT }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref_name }}" | jq -r .id)
        
        if [ "$release_id" = "null" ]; then
          echo "Creating new release"
          release_response=$(curl -sS -X POST -H "Authorization: token ${{ secrets.PAT }}" \
            -d "{\"tag_name\":\"${{ github.ref_name }}\",\"name\":\"Release ${{ github.ref_name }}\",\"draft\":false,\"prerelease\":false}" \
            "https://api.github.com/repos/${{ github.repository }}/releases")
          upload_url=$(echo "$release_response" | jq -r .upload_url | sed 's/{?name,label}//g')
        else
          echo "Release already exists. Updating assets."
          upload_url="https://uploads.github.com/repos/${{ github.repository }}/releases/$release_id/assets"
        fi
        
        echo "Uploading asset"
        curl -sS -X POST -H "Authorization: token ${{ secrets.PAT }}" \
          -H "Content-Type: application/zip" \
          --data-binary @latest-posts-for-elementor.zip \
          "$upload_url?name=latest-posts-for-elementor.zip"